library(plyr)
data_sorted <- arrange(win_loose_melt, variable, player)
data_cumsum <- ddply(data_sorted, "variable", transform, label_ypos=cumsum(value))
data_cumsum
win_loose_melt <- melt(data = player_stat[,c(1:3)], id.vars = 'player')
win_loose_melt
data_sorted <- arrange(win_loose_melt, player, variable)
win_loose_melt
data_cumsum <- ddply(data_sorted, "player", transform, label_ypos=cumsum(value))
data_cumsum
ggplot(win_loose_melt, aes(x = player, y = value, fill = variable)) +
geom_bar(stat = 'identity', width = 0.6) +
geom_text(aes(y = label_ypos, label = value), vjust = 1.6)
scale_fill_manual(values=c('#66CC99','#CC6666')) +
guides(fill=guide_legend(title=NULL)) +
labs(title = "Plot of won and lost games", x = "Player", y = "Number of Games") +
theme_classic()
ggplot(data_cumsum, aes(x = player, y = value, fill = variable)) +
geom_bar(stat = 'identity', width = 0.6) +
geom_text(aes(y = label_ypos, label = value), vjust = 1.6)
scale_fill_manual(values=c('#66CC99','#CC6666')) +
guides(fill=guide_legend(title=NULL)) +
labs(title = "Plot of won and lost games", x = "Player", y = "Number of Games") +
theme_classic()
ggplot(data_cumsum, aes(x = player, y = value, fill = variable)) +
geom_bar(stat = 'identity', width = 0.6) +
geom_text(aes(y = label_ypos, label = value), vjust = 1.6, color = white) +
scale_fill_manual(values=c('#66CC99','#CC6666')) +
guides(fill=guide_legend(title=NULL)) +
labs(title = "Plot of won and lost games", x = "Player", y = "Number of Games") +
theme_classic()
data_cumsum
win_loose_melt <- melt(data = player_stat[,c(1:3)], id.vars = 'player')
data_sorted <- arrange(win_loose_melt, player, variable)
data_cumsum <- ddply(data_sorted, "player", transform, label_ypos=cumsum(value))
ggplot(data_cumsum, aes(x = player, y = value, fill = variable)) +
geom_bar(stat = 'identity', width = 0.6) +
geom_text(aes(y = label_ypos, label = value), vjust = 1.6, color = white) +
scale_fill_manual(values=c('#66CC99','#CC6666')) +
guides(fill=guide_legend(title=NULL)) +
labs(title = "Plot of won and lost games", x = "Player", y = "Number of Games") +
theme_classic()
ggplot(data_cumsum, aes(x = player, y = value, fill = variable)) +
geom_bar(stat = 'identity', width = 0.6) +
geom_text(aes(y = label_ypos, label = value), vjust = 1.6, color = 'white') +
scale_fill_manual(values=c('#66CC99','#CC6666')) +
guides(fill=guide_legend(title=NULL)) +
labs(title = "Plot of won and lost games", x = "Player", y = "Number of Games") +
theme_classic()
ggplot(data_cumsum, aes(x = player, y = value, fill = variable)) +
geom_bar(stat = 'identity', width = 0.6) +
geom_text(aes(y = label_ypos, label = value), vjust = 1.6, color = 'white', size = 3.5) +
scale_fill_manual(values=c('#66CC99','#CC6666')) +
guides(fill=guide_legend(title=NULL)) +
labs(title = "Plot of won and lost games", x = "Player", y = "Number of Games") +
theme_classic()
data_sorted <- arrange(win_loose_melt, variable, player)
data_cumsum <- ddply(data_sorted, "player", transform, label_ypos=cumsum(value))
ggplot(data_cumsum, aes(x = player, y = value, fill = variable)) +
geom_bar(stat = 'identity', width = 0.6) +
geom_text(aes(y = label_ypos, label = value), vjust = 1.6, color = 'white', size = 3.5) +
scale_fill_manual(values=c('#66CC99','#CC6666')) +
guides(fill=guide_legend(title=NULL)) +
labs(title = "Plot of won and lost games", x = "Player", y = "Number of Games") +
theme_classic()
data_cumsum
win_loose_melt
data_sorted
data_sorted <- arrange(win_loose_melt, variable)
data_sorted
data_sorted <- arrange(win_loose_melt, desc(variable), player)
data_sorted
data_sorted <- arrange(win_loose_melt, desc(variable), player)
data_cumsum <- ddply(data_sorted, "player", transform, label_ypos=cumsum(value))
ggplot(data_cumsum, aes(x = player, y = value, fill = variable)) +
geom_bar(stat = 'identity', width = 0.6) +
geom_text(aes(y = label_ypos, label = value), vjust = 1.6, color = 'white', size = 3.5) +
scale_fill_manual(values=c('#66CC99','#CC6666')) +
guides(fill=guide_legend(title=NULL)) +
labs(title = "Plot of won and lost games", x = "Player", y = "Number of Games") +
theme_classic()
library(data.table)
library(ggplot2)
library(reshape2)
library(plyr)
dt <- data.table(read.csv(file = "game_simulation_data.csv"))
#wich player wins
View(dt)
players = c("Luis", "Karo", "Jonny", "Chris", "Quirin", "Otto")
player_stat <- data.table()
for(i in 1:6){
games_won <- nrow(dt[(player1_id==players[i] & player1==21) | (player2_id==players[i] & player2==21)])
games_lost <- nrow(dt[(player1_id==players[i] & player2==21) | (player2_id==players[i] & player1==21)])
new_entry <- data.table(player=players[i],
games_won=games_won,
games_lost=games_lost)
player_stat <- rbind(player_stat, new_entry)
}
win_loose_melt <- melt(data = player_stat[,c(1:3)], id.vars = 'player')
data_sorted <- arrange(win_loose_melt, desc(variable), player)
data_cumsum <- ddply(data_sorted, "player", transform, label_ypos=cumsum(value))
ggplot(data_cumsum, aes(x = player, y = value, fill = variable)) +
geom_bar(stat = 'identity', width = 0.6) +
geom_text(aes(y = label_ypos, label = value), vjust = 1.6, color = 'white', size = 3.5) +
scale_fill_manual(values=c('#66CC99','#CC6666')) +
guides(fill=guide_legend(title=NULL)) +
labs(title = "Plot of won and lost games", x = "Player", y = "Number of Games") +
theme_classic()
mean_duration <- data.table()
for (i in 1:6) {
time_stamps <- dt[(player1==21 | player2==21) & (player1_id==players[i] | player2_id==players[i])]
mean_tmp <- (sum(time_stamps[,3])/nrow(time_stamps))/60
mean_duration <- rbind(mean_duration, mean_tmp)
}
player_stat <- cbind(player_stat, mean_duration = mean_duration)
mean_duration_melt <- melt(data = player_stat[,c(1,4)], id.vars = 'player')
ggplot(mean_duration_melt, aes(x = player, y = value)) +
geom_bar(stat = 'identity', width=0.6, fill="steelblue") +
labs(title = "Plot of the mean duration of one game in minutes", x = "Player", y = "Mean Duration") +
geom_text(aes(label = round(value, digits = 2)), vjust=1.6, color="white") +
theme_classic()
result <- c()
for (i in 1:length(players)) {
for (j in 1:length(players)) {
new_result <- nrow(dt[(player1==21 | player2==21) & ((player1_id==players[i] & player2_id==players[j]) | (player2_id==players[i] & player1_id==players[j]))])
result <- append(result, new_result)
}
}
love_matrix <- matrix(result, byrow = TRUE, nrow = length(players))
colnames(love_matrix) <- players
rownames(love_matrix) <- players
love_melt <- melt(love_matrix)
names(love_melt)[3] <- "Amount"
ggplot(love_melt, aes(x = Var2, y = Var1)) +
geom_raster(aes(fill = Amount)) +
geom_text(aes(label = Amount), color = "white") +
scale_fill_gradient(low="white", high="#660000") +
labs(x="", y="", title="Who played with whom") +
theme_bw() +
theme(axis.text.x=element_text(size=9, angle=0, vjust=0.3),
axis.text.y=element_text(size=9),
plot.title=element_text(size=16))
library(plotly)
install.packages(plotly)
install.packages("plotly")
library(plotly)
dt[(player1==21 | player2==21), games_per_day := .N, by = C(game_date, player1_id)]
dt <- data.table(read.csv(file = "game_simulation_data.csv"))
dt[(player1==21 | player2==21), games_per_day := .N, by = C(game_date, player1_id)]
dt[,rounds_per_game := .N, by = list(game_id, game_date)]
View(dt)
dt[(player1==21 | player2==21), games_per_day := .N, by = C(game_date, player1_id)]
dt[(player1==21 | player2==21), games_per_day := .N, by = C(player1_id, game_date)]
dt[(player1==21 | player2==21), games_per_day := .N, by = C(player1_id)]
player_stat
names(player_stat)[4] <- "mean_duration"
player_stat
mean_duration <- data.table()
for (i in 1:6) {
time_stamps <- dt[(player1==21 | player2==21) & (player1_id==players[i] | player2_id==players[i])]
mean_tmp <- round((sum(time_stamps[,3])/nrow(time_stamps))/60, digits = 2)
mean_duration <- rbind(mean_duration, mean_tmp)
}
player_stat <- cbind(player_stat, mean_duration = mean_duration)
#plot
mean_duration_melt <- melt(data = player_stat[,c(1,4)], id.vars = 'player')
ggplot(mean_duration_melt, aes(x = player, y = value)) +
geom_bar(stat = 'identity', width=0.6, fill="steelblue") +
labs(title = "Plot of the mean duration of one game in minutes", x = "Player", y = "Mean Duration") +
geom_text(aes(label = value), vjust=1.6, color="white") +
theme_classic()
names(player_stat)[4] <- "mean_duration"
mean_duration
player_stat
dt <- data.table(read.csv(file = "game_simulation_data.csv"))
players = c("Luis", "Karo", "Jonny", "Chris", "Quirin", "Otto")
player_stat <- data.table()
mean_duration <- data.table()
for (i in 1:6) {
time_stamps <- dt[(player1==21 | player2==21) & (player1_id==players[i] | player2_id==players[i])]
mean_tmp <- round((sum(time_stamps[,3])/nrow(time_stamps))/60, digits = 2)
mean_duration <- rbind(mean_duration, mean_tmp)
}
player_stat <- cbind(player_stat, mean_duration = mean_duration)
#plot
mean_duration_melt <- melt(data = player_stat[,c(1,4)], id.vars = 'player')
ggplot(mean_duration_melt, aes(x = player, y = value)) +
geom_bar(stat = 'identity', width=0.6, fill="steelblue") +
labs(title = "Plot of the mean duration of one game in minutes", x = "Player", y = "Mean Duration") +
geom_text(aes(label = value), vjust=1.6, color="white") +
theme_classic()
names(player_stat)[4] <- "mean_duration"
for(i in 1:6){
games_won <- nrow(dt[(player1_id==players[i] & player1==21) | (player2_id==players[i] & player2==21)])
games_lost <- nrow(dt[(player1_id==players[i] & player2==21) | (player2_id==players[i] & player1==21)])
new_entry <- data.table(player=players[i],
games_won=games_won,
games_lost=games_lost)
player_stat <- rbind(player_stat, new_entry)
}
#plot
win_loose_melt <- melt(data = player_stat[,c(1:3)], id.vars = 'player')
data_sorted <- arrange(win_loose_melt, desc(variable), player)
data_cumsum <- ddply(data_sorted, "player", transform, label_ypos=cumsum(value))
ggplot(data_cumsum, aes(x = player, y = value, fill = variable)) +
geom_bar(stat = 'identity', width = 0.6) +
geom_text(aes(y = label_ypos, label = value), vjust = 1.6, color = 'white', size = 3.5) +
scale_fill_manual(values=c('#66CC99','#CC6666')) +
guides(fill=guide_legend(title=NULL)) +
labs(title = "Plot of won and lost games", x = "Player", y = "Number of Games") +
theme_classic()
ggplotly
for(i in 1:6){
games_won <- nrow(dt[(player1_id==players[i] & player1==21) | (player2_id==players[i] & player2==21)])
games_lost <- nrow(dt[(player1_id==players[i] & player2==21) | (player2_id==players[i] & player1==21)])
new_entry <- data.table(player=players[i],
games_won=games_won,
games_lost=games_lost)
player_stat <- rbind(player_stat, new_entry)
}
#plot
win_loose_melt <- melt(data = player_stat[,c(1:3)], id.vars = 'player')
data_sorted <- arrange(win_loose_melt, desc(variable), player)
data_cumsum <- ddply(data_sorted, "player", transform, label_ypos=cumsum(value))
ggplot(data_cumsum, aes(x = player, y = value, fill = variable)) +
geom_bar(stat = 'identity', width = 0.6) +
geom_text(aes(y = label_ypos, label = value), vjust = 1.6, color = 'white', size = 3.5) +
scale_fill_manual(values=c('#66CC99','#CC6666')) +
guides(fill=guide_legend(title=NULL)) +
labs(title = "Plot of won and lost games", x = "Player", y = "Number of Games") +
theme_classic()
library(data.table)
library(ggplot2)
library(reshape2)
library(plyr)
library(plotly)
library(data.table)
library(ggplot2)
library(reshape2)
library(plyr)
dt <- data.table(read.csv(file = "game_simulation_data.csv"))
players = c("Luis", "Karo", "Jonny", "Chris", "Quirin", "Otto")
player_stat <- data.table()
for(i in 1:6){
games_won <- nrow(dt[(player1_id==players[i] & player1==21) | (player2_id==players[i] & player2==21)])
games_lost <- nrow(dt[(player1_id==players[i] & player2==21) | (player2_id==players[i] & player1==21)])
new_entry <- data.table(player=players[i],
games_won=games_won,
games_lost=games_lost)
player_stat <- rbind(player_stat, new_entry)
}
player_stat
win_loose_melt <- melt(data = player_stat[,c(1:3)], id.vars = 'player')
data_sorted <- arrange(win_loose_melt, desc(variable), player)
data_cumsum <- ddply(data_sorted, "player", transform, label_ypos=cumsum(value))
ggplot(data_cumsum, aes(x = player, y = value, fill = variable)) +
geom_bar(stat = 'identity', width = 0.6) +
geom_text(aes(y = label_ypos, label = value), vjust = 1.6, color = 'white', size = 3.5) +
scale_fill_manual(values=c('#66CC99','#CC6666')) +
guides(fill=guide_legend(title=NULL)) +
labs(title = "Plot of won and lost games", x = "Player", y = "Number of Games") +
theme_classic()
mean_duration <- data.table()
for (i in 1:6) {
time_stamps <- dt[(player1==21 | player2==21) & (player1_id==players[i] | player2_id==players[i])]
mean_tmp <- round((sum(time_stamps[,3])/nrow(time_stamps))/60, digits = 2)
mean_duration <- rbind(mean_duration, mean_tmp)
}
player_stat <- cbind(player_stat, mean_duration = mean_duration)
player_stat
names(player_stat)[4] <- "mean_duration"
player_stat
mean_duration_melt <- melt(data = player_stat[,c(1,4)], id.vars = 'player')
ggplot(mean_duration_melt, aes(x = player, y = value)) +
geom_bar(stat = 'identity', width=0.6, fill="steelblue") +
labs(title = "Plot of the mean duration of one game in minutes", x = "Player", y = "Mean Duration") +
geom_text(aes(label = value), vjust=1.6, color="white") +
theme_classic()
dt[(player1==21 | player2==21) & (player1_id=="Chris" | player2_id=="Chris"),]
dt[(player1==21 | player2==21) & (player1_id=="Chris" | player2_id=="Chris"), games_per_date=.N, by = game_date]
View(dt)
dt[(player1==21 | player2==21) & (player1_id=="Chris" | player2_id=="Chris"), games_per_date:=.N, by = game_date]
View(mean_duration)
View(dt)
date_data <- dt[(player1==21 | player2==21) & (player1_id=="Chris" | player2_id=="Chris"), games_per_date:=.N, by = game_date]
date_data[(games_per_date!=NA)]
date_data <- dt[(player1==21 | player2==21) & (player1_id=="Chris" | player2_id=="Chris"), games_per_date:=.N, by = game_date]
date_data[(games_per_date!=NA)]
date_data
date_data[,(games_per_date!=NA)]
date_data[games_per_date!="NA"]
dt[(player1==21 | player2==21) & (player1_id=="Chris" | player2_id=="Chris"), games_per_date:=.N, by = game_date][games_per_date!="NA"]
date_data[games_per_date]
date_data[,games_per_date]
date_data <- dt[(player1==21 | player2==21) & (player1_id=="Chris" | player2_id=="Chris"),
games_per_date:=.N, by = game_date][games_per_date!="NA"]
date_data[,games_per_date]
mean(date_data[,games_per_date])
mean_n_of_games <- data.table()
for (i in 1:length(players)) {
date_data <- dt[(player1==21 | player2==21) & (player1_id==players[i] | player2_id==players[i]),
games_per_date:=.N, by = game_date][games_per_date!="NA"]
mean_n_of_games <- rbind(mean_n_of_games, mean(date_data[,games_per_date]))
}
mean_n_of_games
games_per_day <- data.table()
for (i in 1:length(players)) {
date_data <- dt[(player1==21 | player2==21) & (player1_id==players[i] | player2_id==players[i]),
games_per_date:=.N, by = game_date][games_per_date!="NA"]
games_per_day <- rbind(games_per_day, mean(date_data[,games_per_date]))
}
player_stat <- cbind(player_stat, games_per_day = games_per_day)
player_stat
names(player_stat)[5] <- "games_per_day"
player_stat
library(data.table)
library(ggplot2)
library(reshape2)
library(plyr)
dt <- data.table(read.csv(file = "game_simulation_data.csv"))
players = c("Luis", "Karo", "Jonny", "Chris", "Quirin", "Otto")
player_stat <- data.table()
for(i in 1:6){
games_won <- nrow(dt[(player1_id==players[i] & player1==21) | (player2_id==players[i] & player2==21)])
games_lost <- nrow(dt[(player1_id==players[i] & player2==21) | (player2_id==players[i] & player1==21)])
new_entry <- data.table(player=players[i],
games_won=games_won,
games_lost=games_lost)
player_stat <- rbind(player_stat, new_entry)
}
#plot
win_loose_melt <- melt(data = player_stat[,c(1:3)], id.vars = 'player')
data_sorted <- arrange(win_loose_melt, desc(variable), player)
data_cumsum <- ddply(data_sorted, "player", transform, label_ypos=cumsum(value))
ggplot(data_cumsum, aes(x = player, y = value, fill = variable)) +
geom_bar(stat = 'identity', width = 0.6) +
geom_text(aes(y = label_ypos, label = value), vjust = 1.6, color = 'white', size = 3.5) +
scale_fill_manual(values=c('#66CC99','#CC6666')) +
guides(fill=guide_legend(title=NULL)) +
labs(title = "Plot of won and lost games", x = "Player", y = "Number of Games") +
theme_classic()
mean_duration <- data.table()
for (i in 1:length(players)) {
time_stamps <- dt[(player1==21 | player2==21) & (player1_id==players[i] | player2_id==players[i])]
mean_tmp <- round((sum(time_stamps[,3])/nrow(time_stamps))/60, digits = 2)
mean_duration <- rbind(mean_duration, mean_tmp)
}
player_stat <- cbind(player_stat, mean_duration = mean_duration)
names(player_stat)[4] <- "mean_duration"
#plot
mean_duration_melt <- melt(data = player_stat[,c(1,4)], id.vars = 'player')
ggplot(mean_duration_melt, aes(x = player, y = value)) +
geom_bar(stat = 'identity', width=0.6, fill="steelblue") +
labs(title = "Plot of the mean duration of one game in minutes", x = "Player", y = "Mean Duration") +
geom_text(aes(label = value), vjust=1.6, color="white") +
theme_classic()
result <- c()
for (i in 1:length(players)) {
for (j in 1:length(players)) {
new_result <- nrow(dt[(player1==21 | player2==21) & ((player1_id==players[i] & player2_id==players[j]) | (player2_id==players[i] & player1_id==players[j]))])
result <- append(result, new_result)
}
}
love_matrix <- matrix(result, byrow = TRUE, nrow = length(players))
colnames(love_matrix) <- players
rownames(love_matrix) <- players
#plot it
love_melt <- melt(love_matrix)
names(love_melt)[3] <- "Amount"
ggplot(love_melt, aes(x = Var2, y = Var1)) +
geom_raster(aes(fill = Amount)) +
geom_text(aes(label = Amount), color = "white") +
scale_fill_gradient(low="white", high="#660000") +
labs(x="", y="", title="Who played with whom") +
theme_bw() +
theme(axis.text.x=element_text(size=9, angle=0, vjust=0.3),
axis.text.y=element_text(size=9),
plot.title=element_text(size=16))
games_per_day <- data.table()
for (i in 1:length(players)) {
date_data <- dt[(player1==21 | player2==21) & (player1_id==players[i] | player2_id==players[i]),
games_per_date:=.N, by = game_date][games_per_date!="NA"]
games_per_day <- rbind(games_per_day, mean(date_data[,games_per_date]))
}
player_stat <- cbind(player_stat, games_per_day = games_per_day)
names(player_stat)[5] <- "games_per_day"
player_stat
View(dt)
View(dt)
library(data.table)
library(magrittr)
library(ggplot2)
dt <- read.csv(file = "game_simulation_data.csv")
dt <- data.table(dt)
dt$game_date <- as.Date(dt[,game_date])
chosen_player = c("Luis", "Karo", "Jonny", "Chris", "Quirin", "Otto")[4]
# Q1: how fast do you win games: ----
# extract all games in which you played
chosen_player_dt <- dt[player1_id == chosen_player | player2_id == chosen_player]
# extract the games you won
winnings <- chosen_player_dt[(player1>=21 & player1_id == chosen_player) | (player2>=21 & player2_id == chosen_player)]
# the game length of won games is just the 'final' time_stamp_value.
ggplot(melt(winnings, measure.vars = c('time_stamp', 'game_date'), id.vars = 'game_id'))+
## wie lang sind die winstreaks:
endscores <- chosen_player_dt[(player1>=21) | (player2>=21)]
current_win_streak <- 0
current_losing_streak <- 0
winning_streak_vec <- c()
losing_streak_vec <- c()
for(i in 1:nrow(endscores)){
if(
(endscores$player1_id[i] == chosen_player && endscores$player1[i]==21) |
(endscores$player2_id[i] == chosen_player && endscores$player2[i]==21)
){
current_win_streak = current_win_streak+1
}
else{
winning_streak_vec <- c(winning_streak_vec, current_win_streak)
current_win_streak = 0
}
if(
(endscores$player1_id[i] == chosen_player && endscores$player2[i]==21) |
(endscores$player2_id[i] == chosen_player && endscores$player1[i]==21)
){
current_losing_streak = current_losing_streak+1
}
else{
losing_streak_vec <- c(losing_streak_vec, current_losing_streak)
current_losing_streak = 0
}
}
# concentration/spielfluss (wie lang von punkt zu punkt)
chosen_player_dt[, time_to_score]
# spielgewinner identifizieren
dt[,winner := ifelse(max(player1)==21, player1_id, player2_id), by = game_id]
## ausgespielte gesamtpunktzahl // knappheit der siege
dt[, sum(winner==chosen_player),by = game_id]
# punktratio for chosen player.
endscores[,winner := ifelse(max(player1)==21, player1_id, player2_id), by = game_id]
endscores[, ratio:= ifelse((player1_id==chosen_player) & (winner == chosen_player), player1/player2, player2/player1)]
# on-serve-strengh
on_serve_strengh <- chosen_player_dt[chosen_player==player1_id & who_serves==1, sum(who_serves==who_scores)/sum(who_serves),by=game_id] %>% rbind(
chosen_player_dt[chosen_player==player2_id & who_serves==2, sum(who_serves==who_scores)/sum(who_serves-1),by=game_id]) # who_serves-1 because who_serves is 2 and we are looking for the ratio.
on_serve_strengh[order(game_id),]
setnames(on_serve_strengh,old = "V1", new = "serve_points_ratio")
# on-defense-strengh
on_defense_strengh <- chosen_player_dt[chosen_player==player1_id & who_serves==2, sum(who_serves!=who_scores)/sum(who_serves-1),by=game_id] %>% rbind(
chosen_player_dt[chosen_player==player2_id & who_serves==1, sum(who_serves!=who_scores)/sum(who_serves),by=game_id]) # who_serves-1 because who_serves is 2 and we are looking for the ratio.
on_defense_strengh[order(game_id),]
setnames(on_defense_strengh,old = "V1", new = "def_points_ratio")
endscores <- endscores[on_serve_strengh,on='game_id']
endscores <- endscores[on_defense_strengh,on='game_id']
player_stat
player_stat
win_loose_melt <- melt(data = player_stat[,c(1:3)], id.vars = 'player')
data_sorted <- arrange(win_loose_melt, desc(variable), player)
data_cumsum <- ddply(data_sorted, "player", transform, label_ypos=cumsum(value))
ggplot(data_cumsum, aes(x = player, y = value, fill = variable)) +
geom_bar(stat = 'identity', width = 0.6) +
geom_text(aes(y = label_ypos, label = value), vjust = 1.6, color = 'white', size = 3.5) +
scale_fill_manual(values=c('#66CC99','#CC6666')) +
guides(fill=guide_legend(title=NULL)) +
labs(title = "Plot of won and lost games", x = "Player", y = "Number of Games") +
theme_classic()
library(plotly)
install.packages('vctrs')
install.packages("vctrs")
install.packages("vctrs")
install.packages("vctrs")
install.packages("vctrs")
library(plotly)
time_stamps
mean_duration_melt <- melt(data = player_stat[,c(1,4)], id.vars = 'player')
ggplot(mean_duration_melt, aes(x = player, y = value)) +
geom_bar(stat = 'identity', width=0.6, fill="steelblue") +
labs(title = "Plot of the mean duration of one game in minutes", x = "Player", y = "Mean Duration") +
geom_text(aes(label = value), vjust=1.6, color="white") +
theme_classic()
ggplot(mean_duration_melt, aes(x = player, y = value)) +
geom_bar(stat = 'identity', width=0.6, fill="steelblue") +
labs(title = "Plot of the mean duration of one game in minutes", x = "Player", y = "Mean Duration") +
geom_text(aes(label = value), vjust=1.6, color="white") +
xlim(c(14.5,16)) +
theme_classic()
ggplot(mean_duration_melt, aes(x = player, y = value)) +
geom_bar(stat = 'identity', width=0.6, fill="steelblue") +
labs(title = "Plot of the mean duration of one game in minutes", x = "Player", y = "Mean Duration") +
geom_text(aes(label = value), vjust=1.6, color="white") +
xlim(c(14.5:16)) +
theme_classic()
ggplot(mean_duration_melt, aes(x = player, y = value)) +
geom_bar(stat = 'identity', width=0.6, fill="steelblue") +
labs(title = "Plot of the mean duration of one game in minutes", x = "Player", y = "Mean Duration") +
geom_text(aes(label = value), vjust=1.6, color="white") +
xlim(14.5,16) +
theme_classic()
ggplot(mean_duration_melt, aes(x = player, y = value)) +
geom_bar(stat = 'identity', width=0.6, fill="steelblue") +
labs(title = "Plot of the mean duration of one game in minutes", x = "Player", y = "Mean Duration") +
geom_text(aes(label = value), vjust=1.6, color="white") +
xlim(14.5:16) +
theme_classic()
ggplot(love_melt, aes(x = Var2, y = Var1)) +
geom_raster(aes(fill = Amount)) +
geom_text(aes(label = Amount), color = "white") +
scale_fill_gradient(low="white", high="#660000") +
labs(x="", y="", title="Who played with whom") +
theme_bw() +
theme(axis.text.x=element_text(size=9, angle=0, vjust=0.3),
axis.text.y=element_text(size=9),
plot.title=element_text(size=16))
player_stat
